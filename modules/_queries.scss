/// Media Queries
//===============================================


// Viewport Settings
//---------------------------------------------

$neutron-phablet-min: 		$neutron-mobile-max + 1;
$neutron-tablet-min: 		$neutron-phablet-max + 1;
$neutron-desktop-sml-min: 	$neutron-tablet-max + 1;
$neutron-desktop-mid-min: 	$neutron-desktop-sml-max + 1;
$neutron-desktop-lrg-min: 	$neutron-desktop-mid-max + 1;

@function createBreakpoint($fromThisSize: "", $uptoThisSize: ""){
	$query: "";

	@if $fromThisSize != "" or $uptoThisSize != "" {

		@if $fromThisSize != "" and $fromThisSize != 0  {
			$query: $query + "(min-width:#{$fromThisSize})";
		}

		@if  ($fromThisSize != "" and $fromThisSize != 0) and $uptoThisSize != "" {
			$query: $query + " and ";
		}

		@if $uptoThisSize != "" {
			$query: $query + "(max-width:#{$uptoThisSize})";
		}

		@return unquote($query);
	}
}

// Media Queries
//---------------------------------------------

// Map of set breakpoints
$neutron_breakpoints: (
	mobile: 			createBreakpoint(0, $neutron-mobile-max),
	phablet: 			createBreakpoint($neutron-phablet-min, $neutron-phablet-max),
	from-phablet: 		createBreakpoint($neutron-phablet-min),
	tablet: 			createBreakpoint($neutron-tablet-min, $neutron-tablet-max),
	from-tablet: 		createBreakpoint($neutron-tablet-min),
	desktop-sml: 		createBreakpoint($neutron-desktop-sml-min, $neutron-desktop-sml-max),
	desktop: 			createBreakpoint($neutron-desktop-sml-min),
	from-desktop: 		createBreakpoint($neutron-desktop-sml-min),
	from-desktop-sml: 	createBreakpoint($neutron-desktop-sml-min),
	desktop-mid: 		createBreakpoint($neutron-desktop-mid-min, $neutron-desktop-mid-max),
	from-desktop-mid: 	createBreakpoint($neutron-desktop-mid-min),
	desktop-lrg: 		createBreakpoint($neutron-desktop-lrg-min),
	from-desktop-lrg: 	createBreakpoint($neutron-desktop-lrg-min)
) !default;

@function addBreakpoint($args...) {
	
	$label:"";
	$from-size:0;
	$upto-size:0;
	$media:"";
	$newBreakpoint: "";	
	$new_neutron_breakpoints: $neutron_breakpoints;

	
	@if length($args) > 1 {
		
		$label: nth($args, 1);
		
		// If label, from, and upto are provided
		@if length($args) == 3 {
			$from-size: nth($args, 2);
			$upto-size: nth($args, 3);
		}	
			
		// If label, and query string are provided
		@if length($args) == 2 {
			$media: nth($args, 2);
		}

		// create viewport-based breakpoint
		@if $from-size != 0 and $upto-size != 0 {
			$newBreakpoint: createBreakpoint($from-size, $upto-size);
		} @else if $from-size != 0 {
			$newBreakpoint: createBreakpoint($from-size);
		} @else if $upto-size != 0 {
			$newBreakpoint: createBreakpoint($upto-size);
		}
		
		// Create custom breakpoint
		@if $media != "" {
			$newBreakpoint: $media;
		}
		
		@if $newBreakpoint != "" {
					
			$appending: ($label: $newBreakpoint);
			
			$new_neutron_breakpoints: map-merge($new_neutron_breakpoints, $appending);
		}
	}
	
	@return $new_neutron_breakpoints;
	
}

@mixin breakpoint($breakpoint: "", $resolution: "", $media-type: "", $media-feature: "") {
	@if $breakpoint != "" or $resolution != "" or $media-feature != "" or $media-type {

		$media: "";

		// Add breakpoint to media string
		@if $breakpoint != "" {
			@if map-has-key($neutron_breakpoints, $breakpoint) {
				$media: inspect(map-get($neutron_breakpoints, $breakpoint));
			}
		}

		// Add dpi to media string
		@if $resolution != "" {
			$res-dpi: $resolution * 96;

			@if $media != "" {
				$media: $media + " and";
			}

			$media: $media + " all and (min-resolution: #{$res-dpi}dpi) ";
		}

		// Add additional supplied query types to media string
		@if $media-type != "" {
			@if $media != "" {
				$media: $media + " and ";
			}

			$media: $media + $media-type;
		}
		
		// Add additional supplied query features to media string
		@if $media-feature != "" {
			@if $media != "" {
				$media: $media + " and ";
			}

			$media: $media + "all and (" + $media-feature + ")";
		}

		@media #{$media} {
			@content;
		}
	}
}
